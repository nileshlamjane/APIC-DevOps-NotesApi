<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="ef678489-113f-43db-86ec-1cc6498c8d7b" activeEnvironment="Default" name="DevOpsNotesApi" resourceRoot="" soapui-version="5.3.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="48884986-983b-4bd7-b9dd-d2bd48cde427" wadlVersion="http://wadl.dev.java.net/2009/02" name="DevOpsNotesApi" type="rest" basePath="/api" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description xsi:nil="true"/><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://$(catalog.host)</con:endpoint></con:endpoints><con:resource name="/Notes" path="/Notes" id="a80481aa-9aca-49f5-af9b-c98d8afe1d2b"><con:settings/><con:parameters/><con:method name="Note.find" id="48f7d51b-826d-4402-be21-9f668a7575c9" method="GET"><con:description>
Find all instances of the model matched by filter from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="c7b4d5c4-646e-4bd0-b3c6-f88b1b3b8aee" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="Note.create" id="887136af-a0f1-4c14-9418-b8d17fdea96e" method="POST"><con:description>
Create a new instance of the model and persist it into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>422</con:status><con:params/><con:element xmlns:not="https://api.us.apiconnect.ibmcloud.com/apiconnectorg-dev/sb/api/Notes">not:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="063f6681-080c-433b-83c3-94fe8e8544d5" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="Note.replaceOrCreate__put_Notes" id="5d45d9e9-f6c2-4aaa-afc1-7a6333dd260d" method="PUT"><con:description>
Replace an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="184e8bae-5b62-4d16-accd-0d7dcd0d7f80" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="Note.patchOrCreate" id="da22e707-1417-4cd3-a688-b33b5a7db2e6" method="PATCH"><con:description>
Patch an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="0aba3ed6-4c55-4bf9-b015-454ab37539c9" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Notes/count" path="/Notes/count" id="86167653-98a1-4388-a34b-a490c4f4489f"><con:settings/><con:parameters/><con:method name="Note.count" id="e6ef3152-a93f-42e0-9864-3d501813c2b0" method="GET"><con:description>
Count instances of the model matched by where from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="2bd3a801-0a5e-490f-8a31-f9bb877b258e" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Notes/findOne" path="/Notes/findOne" id="4e01d8a8-af58-4bd8-abdd-8cf98852b78e"><con:settings/><con:parameters/><con:method name="Note.findOne" id="fdb1fcc9-3285-4264-b0a1-eed3f727ab71" method="GET"><con:description>
Find first instance of the model matched by filter from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="1b4529b4-aa59-4b5d-a02e-0df59c52e4f7" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Notes/replaceOrCreate" path="/Notes/replaceOrCreate" id="2f189da7-7a6f-4c3e-969f-1ecd78e1b012"><con:settings/><con:parameters/><con:method name="Note.replaceOrCreate__post_Notes_replaceOrCreate" id="4b726c2b-68fe-4500-9eae-aab98823e2b8" method="POST"><con:description>
Replace an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="0fc08a80-6bfa-4343-879b-a8656c380dab" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Notes/update" path="/Notes/update" id="e539df0e-05a6-43e2-a006-6a0755c69ab8"><con:settings/><con:parameters/><con:method name="Note.updateAll" id="f44f3212-b0bb-4cdf-90e3-7e31b9dafc4e" method="POST"><con:description>
Update instances of the model matched by {{where}} from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="0393a2ff-dc90-4426-ae12-aeaac4dcbc7e" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Notes/upsertWithWhere" path="/Notes/upsertWithWhere" id="df3a279c-c919-4194-8b84-d24bd837be4c"><con:settings/><con:parameters/><con:method name="Note.upsertWithWhere" id="215c71cf-6251-40ff-8440-06169cbce43e" method="POST"><con:description>
Update an existing model instance or insert a new one into the data source based on the where criteria.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="12af8965-e5b6-4b56-acc3-ebd93eb0dde9" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Notes/{id}" path="/Notes/{id}" id="b08aafec-cc36-4cf9-80c7-881d25a706c4"><con:settings/><con:parameters/><con:method name="Note.findById" id="704b0eb0-9832-4e9a-9bb3-d435ed0b6047" method="GET"><con:description>
Find a model instance by {{id}} from the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="b339bbde-f745-4f7a-babd-ac3c41923442" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="Note.replaceById__put_Notes_{id}" id="c00847ab-a73f-47d0-8149-5beef1c00e3c" method="PUT"><con:description>
Replace attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="25bf7c56-6c05-4728-b9a8-3a27ad1c9054" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="Note.deleteById" id="147eefa5-2a0a-48c2-943c-c373e8375749" method="DELETE"><con:description>
Delete a model instance by {{id}} from the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="9d40c90b-2f36-4b73-96ee-b59d097c8afc" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="Note.prototype.patchAttributes" id="59f0867e-9177-4979-b268-25cc3848b7e5" method="PATCH"><con:description>
Patch attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Note id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="dafc4257-e58d-425e-aee3-b1d2278d5ed9" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Notes/{id}/exists" path="/Notes/{id}/exists" id="8d7c9b96-814a-49f3-a5f6-6aec5fe4acf9"><con:settings/><con:parameters/><con:method name="Note.exists__get_Notes_{id}_exists" id="0c547ea1-e807-47a3-a52b-45a0c6af4c07" method="GET"><con:description>
Check whether a model instance exists in the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="3ce8b7f6-a3c0-4256-acaf-dd0f833c024c" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Notes/{id}/replace" path="/Notes/{id}/replace" id="ab7ae337-64c1-4240-b32f-8066af482d44"><con:settings/><con:parameters/><con:method name="Note.replaceById__post_Notes_{id}_replace" id="6bfa0cbf-f34b-41de-a8ae-da4e53bb007c" method="POST"><con:description>
Replace attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="657c2fc7-79da-46e3-b2d2-4dde6109add2" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users" path="/Users" id="64909c4b-ed10-47f1-91a5-b61d8df50f1a"><con:settings/><con:parameters/><con:method name="User.find" id="03e01f0c-2884-4fa5-9639-4eb80f0cc2d2" method="GET"><con:description>
Find all instances of the model matched by filter from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="a1dd5256-9e5d-4dc2-a120-bf235712004c" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="User.create" id="6a0a8ae5-e94e-40ad-b29f-ddea0fd0fd76" method="POST"><con:description>
Create a new instance of the model and persist it into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="4d93af68-3c7f-42eb-83ca-4816a5a3a22b" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="User.replaceOrCreate__put_Users" id="75ff771e-6187-4911-b72c-d8447165ed2d" method="PUT"><con:description>
Replace an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="aaeb8a64-70a9-47d9-8b42-322a4b0d087e" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="User.patchOrCreate" id="b64a5f2b-407d-4c6e-9ae0-40bc5bb80af2" method="PATCH"><con:description>
Patch an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="64aaa680-7d22-464a-922e-afe5aa902581" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/change-password" path="/Users/change-password" id="a5a6cc4e-047e-4dbf-8ce0-2b590602f792"><con:settings/><con:parameters/><con:method name="User.changePassword" id="d1ee8491-7a26-4fce-ac04-b63ec953d6e5" method="POST"><con:description>
Change a user's password.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>oldPassword</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>newPassword</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="842cb20b-3b3c-4b83-b45a-3513507614b7" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/confirm" path="/Users/confirm" id="06535c85-a2c3-43c9-8216-324b18af8b2c"><con:settings/><con:parameters/><con:method name="User.confirm" id="1752e373-1d2d-49f8-833b-b157fd2572e3" method="GET"><con:description>
Confirm a user registration with identity verification token.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>uid</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>token</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>redirect</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="81796577-afbb-4519-8a0c-f6d624de90c4" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/count" path="/Users/count" id="8f58c9f2-8f0c-47c2-b2bf-65f4d237a722"><con:settings/><con:parameters/><con:method name="User.count" id="ea418437-13c5-4241-a50b-7a4086ad4ec0" method="GET"><con:description>
Count instances of the model matched by where from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="4879d87b-a440-48c5-a301-400a3a2301e3" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/findOne" path="/Users/findOne" id="467d3fab-0a06-45d6-8c74-11760e568669"><con:settings/><con:parameters/><con:method name="User.findOne" id="aef4fcd7-8f79-4963-8c26-3e430bf40925" method="GET"><con:description>
Find first instance of the model matched by filter from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="3fec6841-c88a-4a6f-848e-e9025c200e40" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/login" path="/Users/login" id="1c621190-5c92-45cc-a407-99d2903877c4"><con:settings/><con:parameters/><con:method name="User.login" id="0de457fc-12f9-4eb4-b202-f4865ef6def2" method="POST"><con:description>
Login a user with username/email and password.</con:description><con:settings/><con:parameters><con:parameter><con:name>include</con:name><con:style>QUERY</con:style><con:description>Related objects to include in the response. See the description of return value for more details.</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="a4a7d601-b79a-407d-838e-d21a7487fb7f" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/logout" path="/Users/logout" id="667278ae-5b48-4d1b-ad87-881ca58c101d"><con:settings/><con:parameters/><con:method name="User.logout" id="a790544c-cc8a-4ac1-9f13-acbf791d531c" method="POST"><con:description>
Logout a user with access token.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="2056a262-c3ca-4c64-a7e1-25383d3992b6" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/replaceOrCreate" path="/Users/replaceOrCreate" id="be5c7a20-1ff7-4365-923e-a41582c052b6"><con:settings/><con:parameters/><con:method name="User.replaceOrCreate__post_Users_replaceOrCreate" id="52fbca67-a39a-4118-bf0c-e442370893b7" method="POST"><con:description>
Replace an existing model instance or insert a new one into the data source.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="a38ef1af-cecb-49b3-805b-46bf5e49a2ae" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/reset" path="/Users/reset" id="d2e3f33e-d91d-43ba-8f6f-80101b4a400f"><con:settings/><con:parameters/><con:method name="User.resetPassword" id="fd0eab0f-096e-4b8d-a577-bac75695cacf" method="POST"><con:description>
Reset password for a user with email.</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="3b0bcca0-bb42-4e2b-884d-1a3022685775" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/reset-password" path="/Users/reset-password" id="a5e7cbc7-cbe9-41cd-9de4-db48a6d7980d"><con:settings/><con:parameters/><con:method name="User.setPassword" id="1c4ab40d-e806-45a1-a6b3-ee59dd7fb749" method="POST"><con:description>
Reset user's password via a password-reset token.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>newPassword</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="977ca6ff-9982-4cce-aa8f-7cb29b880f1c" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/update" path="/Users/update" id="da5614f8-761f-4207-8bbb-5ae3808a4383"><con:settings/><con:parameters/><con:method name="User.updateAll" id="3275be48-b104-41e1-b621-07406515ee2c" method="POST"><con:description>
Update instances of the model matched by {{where}} from the data source.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="2e1e7682-4d94-42b7-b219-89e832d009f2" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/upsertWithWhere" path="/Users/upsertWithWhere" id="1ac99d13-ef49-4540-925b-11c6caadb897"><con:settings/><con:parameters/><con:method name="User.upsertWithWhere" id="431f24f4-2dc5-4aab-aa9f-78bf9348c9cc" method="POST"><con:description>
Update an existing model instance or insert a new one into the data source based on the where criteria.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="89c0d2a4-2767-493e-9ede-889cdda05d83" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}" path="/Users/{id}" id="17bdeed7-f8f1-4410-9a68-899d415f11af"><con:settings/><con:parameters/><con:method name="User.findById" id="d702351c-b261-4a6a-aa0c-0fe37fac725f" method="GET"><con:description>
Find a model instance by {{id}} from the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description>Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="0d3d88ce-0a6c-4c0f-848b-845bcb4f545e" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="User.replaceById__put_Users_{id}" id="cf23546b-9727-456b-a9cc-179a20fbc91b" method="PUT"><con:description>
Replace attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="16b4c5e3-5d00-4618-a553-d22592a25bb2" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="User.deleteById" id="6c448e0e-340e-47d3-9bac-ce0e752c1d36" method="DELETE"><con:description>
Delete a model instance by {{id}} from the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="61f9a9ba-baaa-4842-94dd-d794953971a8" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="User.prototype.patchAttributes" id="e7d3aa83-4d3f-47bb-a0e6-8d80919e04fb" method="PATCH"><con:description>
Patch attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="fb2e8a09-1d82-4f96-8413-e5a8f3e79c9f" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}/accessTokens" path="/Users/{id}/accessTokens" id="dcb027d3-bf04-44ea-bfbc-29dffe1db6f7"><con:settings/><con:parameters/><con:method name="User.prototype.__get__accessTokens" id="5b5b9fe7-8ae7-46f7-af93-9ffdb8cb85a7" method="GET"><con:description>
Queries accessTokens of User.</con:description><con:settings/><con:parameters><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="25fe6242-697c-4dc2-ab7e-668aa154e39c" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="User.prototype.__create__accessTokens" id="40d23c8c-9d70-4a22-bda7-d21a4d405395" method="POST"><con:description>
Creates a new instance in accessTokens of this model.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="46d0ddca-4d25-43e6-893f-ac4bc0a4fb42" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="User.prototype.__delete__accessTokens" id="fe89488a-3144-4902-a763-bab46f9d8b04" method="DELETE"><con:description>
Deletes all accessTokens of this model.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="c4259d7c-f3ca-4968-9b9a-4f88e2eaad59" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}/accessTokens/count" path="/Users/{id}/accessTokens/count" id="d8957549-b657-46ea-8f82-859c0787af44"><con:settings/><con:parameters/><con:method name="User.prototype.__count__accessTokens" id="e24a3fbb-5940-494b-9b4d-306d206a19f6" method="GET"><con:description>
Counts accessTokens of User.</con:description><con:settings/><con:parameters><con:parameter><con:name>where</con:name><con:style>QUERY</con:style><con:description>Criteria to match model instances</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="8319931b-dc08-4840-8e4b-78daf7a33854" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}/accessTokens/{fk}" path="/Users/{id}/accessTokens/{fk}" id="df05e590-d193-4ce4-b071-7000147faa41"><con:settings/><con:parameters/><con:method name="User.prototype.__findById__accessTokens" id="782821e3-3492-4aef-ab90-b8c2d98bceda" method="GET"><con:description>
Find a related item by id for accessTokens.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>fk</con:name><con:style>TEMPLATE</con:style><con:description>Foreign key for accessTokens</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="d6fa965d-cfb7-4fd3-9ff0-6a970e91e830" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="User.prototype.__updateById__accessTokens" id="db406e47-8a90-4ba8-8b89-74f92160b241" method="PUT"><con:description>
Update a related item by id for accessTokens.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>fk</con:name><con:style>TEMPLATE</con:style><con:description>Foreign key for accessTokens</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="d1bf52c8-c5fd-46e8-a279-b262e40273f3" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method><con:method name="User.prototype.__destroyById__accessTokens" id="428c35de-9f14-488a-ae54-0599166092ce" method="DELETE"><con:description>
Delete a related item by id for accessTokens.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>fk</con:name><con:style>TEMPLATE</con:style><con:description>Foreign key for accessTokens</con:description></con:parameter><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="d5c9bb4d-b6b2-4175-9c60-d693e9620827" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}/exists" path="/Users/{id}/exists" id="969319dc-0636-4fe6-8e15-569ea4621a7e"><con:settings/><con:parameters/><con:method name="User.exists__get_Users_{id}_exists" id="b9093f4a-b9fe-43fa-9008-3d36039e4bff" method="GET"><con:description>
Check whether a model instance exists in the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="58e7c03a-d728-44fd-8a48-8ae98cfb8376" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}/replace" path="/Users/{id}/replace" id="eb33a98c-cfdb-4dd4-9e0c-4d49dd87d14f"><con:settings/><con:parameters/><con:method name="User.replaceById__post_Users_{id}_replace" id="7dd98716-6ccf-43a6-8361-a9e86b1ec1a3" method="POST"><con:description>
Replace attributes for a model instance and persist it into the data source.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>Model id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="d5ea43bf-4286-4ddc-8aa8-bc7d0f80b660" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/Users/{id}/verify" path="/Users/{id}/verify" id="f52e1fd4-a4ad-42bb-9b1d-136981b605a3"><con:settings/><con:parameters/><con:method name="User.prototype.verify" id="4db67dda-e20d-4890-91c8-3b6769a92cb7" method="POST"><con:description>
Trigger user's identity verification with configured verifyOptions</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>id</con:name><con:style>TEMPLATE</con:style><con:description>User id</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/></con:representation><con:request name="Request 1" id="77418f16-d5a0-4353-a678-c146f5f083b7" mediaType="application/json"><con:settings/><con:endpoint>https://$(catalog.host)</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="f30d1e43-0d67-4238-a7a9-104082a3e62b" name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="1498143d-da93-44f0-b26f-0ac792c79339" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="REST Request" id="b789ab7d-f553-42f9-8e16-170a29899bc3"><con:settings/><con:config service="DevOpsNotesApi" methodName="Note.create" resourcePath="/api/Notes" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="30d8761f-2fbe-4e94-bdf9-332340b27418" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-IBM-Client-Secret" value="${#Project#ClientSecret${#Project#ENV}}"/>
  &lt;con:entry key="accept" value="application/json"/>
  &lt;con:entry key="X-IBM-Client-Id" value="${#Project#ClientId${#Project#ENV}}"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#CatalogHost${#Project#ENV}}</con:endpoint><con:request>{
  "title": "kitwe",
  "content": "gocbuwue"
}</con:request><con:originalUri>https://api.us.apiconnect.ibmcloud.com/apiconnectorg-dev/sb/api/Notes</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f1e118b4-a486-4dae-80c7-351c780f2563" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="56613c28-4f40-42a0-8bed-2d6c59dcabb2" name="Contains"><con:configuration><token>id</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="REST Request 2" id="d2e6ae10-ed9f-4b74-90a8-a0e8f48713ae"><con:settings/><con:config service="DevOpsNotesApi" methodName="Note.replaceOrCreate__put_Notes" resourcePath="/api/Notes" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request 2" id="30d8761f-2fbe-4e94-bdf9-332340b27418" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="accept" value="application/json"/>
  &lt;con:entry key="X-IBM-Client-Secret" value="${#Project#ClientSecret${#Project#ENV}}"/>
  &lt;con:entry key="X-IBM-Client-Id" value="${#Project#ClientId${#Project#ENV}}"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#CatalogHost${#Project#ENV}}</con:endpoint><con:request>{
  "title": "kitwe",
  "content": "gocbuwue"
}</con:request><con:originalUri>https://api.us.apiconnect.ibmcloud.com/apiconnectorg-dev/sb/api/Notes</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f1e118b4-a486-4dae-80c7-351c780f2563" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="56613c28-4f40-42a0-8bed-2d6c59dcabb2" name="Contains"><con:configuration><token>id</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>ENV</con:name><con:value>D</con:value></con:property><con:property><con:name>CatalogHostD</con:name><con:value>https://api.us.apiconnect.ibmcloud.com/apiconnectorg-dev/sb</con:value></con:property><con:property><con:name>CatalogHostT</con:name><con:value>https://api.us.apiconnect.ibmcloud.com/apiconnectorg-test/sb</con:value></con:property><con:property><con:name>CatalogHostA</con:name><con:value>https://api.us.apiconnect.ibmcloud.com/apiconnectorg-acc/sb</con:value></con:property><con:property><con:name>CatalogHostP</con:name><con:value>https://api.us.apiconnect.ibmcloud.com/apiconnectorg-prod/sb</con:value></con:property><con:property><con:name>ClientSecretD</con:name><con:value>V3uJ6jA7oC5dG6nH5mF1mC4mF7kV3pI7rH2rC3wX0yO3uH5vC3</con:value></con:property><con:property><con:name>ClientIdD</con:name><con:value>a3f54d31-e2a4-4fc2-9264-601fdb709e39</con:value></con:property><con:property><con:name>ClientSecretT</con:name><con:value>TEST</con:value></con:property><con:property><con:name>ClientIdT</con:name><con:value>TEST</con:value></con:property><con:property><con:name>ClientSecretA</con:name><con:value>ACC</con:value></con:property><con:property><con:name>ClientIdA</con:name><con:value>ACC</con:value></con:property><con:property><con:name>ClientSecretP</con:name><con:value>PROD</con:value></con:property><con:property><con:name>ClientIdP</con:name><con:value>PROD</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>